#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    tcp
    log                     global
    option                  dontlognull
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

#---------------------------------------------------------------------
# frontend for app1
#---------------------------------------------------------------------
frontend  main 192.168.100.100:80
    default_backend             app1

#---------------------------------------------------------------------
# backend for app1
#---------------------------------------------------------------------
backend app1
    balance     roundrobin
    server  n1 10.111.20.1:31000 check
    server  n2 10.111.20.2:31000 check
    server  n3 10.111.20.3:31000 check

#---------------------------------------------------------------------
# frontend for app2
#---------------------------------------------------------------------
frontend  main 192.168.100.101:80
    default_backend             app2

#---------------------------------------------------------------------
# backend for app2
#---------------------------------------------------------------------
backend app2
    balance     roundrobin
    server  n1 10.111.20.1:31001 check
    server  n2 10.111.20.2:31001 check
    server  n3 10.111.20.3:31001 check
